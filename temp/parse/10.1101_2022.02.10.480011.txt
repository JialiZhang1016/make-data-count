Title: "polishCLR: a Nextflow workflow for polishing PacBio CLR genome assemblies         Jennifer  Chang   . USDA, Agricultural Research Service, Jamie Whitten Delta States Research Center,  Agricultural Research Service  USDA  Jamie Whitten Delta States Research Center   Genomics and Bioinformatics Research Unit, 141 Experiment Station Road, Stoneville, MS 38776, USA  Genomics and Bioinformatics Research Unit  141 Experiment Station Road  38776  Stoneville  MS  USA    . Oak Ridge Institute for Science and Education, P.O. Box 117, Oak Ridge, TN 37831, USA  Oak Ridge Institute for Science and Education  P.O. Box 117  37831  Oak Ridge  TN  USA    . Genome Informatics Facility, Office of Biotechnology, Iowa State University, Ames, Iowa 50010, USA  Genome Informatics Facility  Office of Biotechnology  Iowa State University  50010  Ames  Iowa  USA     Amanda  R  Stahlke   amandastahlke@usda.gov  . USDA, Agricultural Research Service, Beltsville Agricultural Research Center, Bee Research Laboratory, 10300 Baltimore Avenue, Beltsville MD 20705, USA  Agricultural Research Service  Bee Research Laboratory  USDA  Beltsville Agricultural Research Center  10300 Baltimore Avenue  20705  Beltsville  MD  USA     Sivanandan  Chudalayandi   . Genome Informatics Facility, Office of Biotechnology, Iowa State University, Ames, Iowa 50010, USA  Genome Informatics Facility  Office of Biotechnology  Iowa State University  50010  Ames  Iowa  USA     Benjamin  D  Rosen   ben.rosen@usda.gov  . USDA, Agricultural Research Service, Beltsville Agricultural Research Center, Animal Genomics and Improvement Laboratory, 10300 Baltimore Avenue, Beltsville, MD 20705, USA  Agricultural Research Service  Animal Genomics and Improvement Laboratory  USDA  Beltsville Agricultural Research Center  10300 Baltimore Avenue  20705  Beltsville  MD  USA     Anna  K  Childers   anna.childers@usda.gov  . USDA, Agricultural Research Service, Beltsville Agricultural Research Center, Bee Research Laboratory, 10300 Baltimore Avenue, Beltsville MD 20705, USA  Agricultural Research Service  Bee Research Laboratory  USDA  Beltsville Agricultural Research Center  10300 Baltimore Avenue  20705  Beltsville  MD  USA     Andrew  Severin   severin@iastate.edu  . Genome Informatics Facility, Office of Biotechnology, Iowa State University, Ames, Iowa 50010, USA  Genome Informatics Facility  Office of Biotechnology  Iowa State University  50010  Ames  Iowa  USA     Genome Informatics Facility, Iowa State University, Ames, Iowa, USA, 50010,  Genome Informatics Facility  Iowa State University  50010  Ames  Iowa  USA     Title: "polishCLR: a Nextflow workflow for polishing PacBio CLR genome assemblies       E450B687C3F66A80B34A72775621AD72  10.1101/2022.02.10.480011     GROBID - A machine learning software for extracting information from scholarly documents       Long-read sequencing has revolutionized genome assembly, yielding highly contiguous, chromosome-level contigs.  However, assemblies from some third generation long read technologies, such as Pacific Biosciences (PacBio) Continuous Long Reads (CLR), have a high error rate.  Such errors can be corrected with short reads through a process called polishing. 

 Although best practices for polishing non-model de novo genome assemblies were recently described by the Vertebrate Genome Project (VGP) Assembly community, there is a need for a publicly available, reproducible workflow that can be easily implemented and run on a 



    conventional high performance computing environment.  Here, we describe polishCLR (https://github.com/isugifNF/polishCLR),  a reproducible Nextflow workflow that implements best practices for polishing assemblies made from CLR data.  PolishCLR can be initiated from several input options that extend best practices to suboptimal cases.  It also provides re-entry points throughout several key processes including identifying duplicate haplotypes in purge_dups, allowing a break for scaffolding if data are available, and throughout multiple rounds of polishing and evaluation with Arrow and FreeBayes.  PolishCLR is containerized and publicly available for the greater assembly community as a tool to complete assemblies from existing, error-prone long-read data. 



 Main Long reads, including those generated by third-generation sequencing platforms such as Pacific Biosciences (PacBio) and Oxford Nanopore Technology (ONT), have revolutionized genome assembly (Childers et al., 2021;  Hotaling et al., 2021;  Rhie et al., 2021) .   However, until recent advances (Hon et al., 2020;  Wang et al., 2021) , long-read sequencing technologies have had high error rates (5-15%), especially among indels  (Watson & Warr, 2019) .   Thus, the vast majority of long-read data that is currently publicly available yields assemblies with low overall consensus accuracy, which, if left uncorrected, negatively impacts downstream analyses, such as gene annotation (Watson & Warr, 2019) .   These assembly errors require correction with an additional higher fidelity read set, such as short-read Illumina data, in a process called polishing (Chin et al., 2016;  Helper et al., 2016;  Walker et al., 2014) .  

 Polishing can be a complex process, with high computational cost, non-trivial filehandling, and issues around special cases that must be resolved.  For example, the long-read contig assembly should ideally be polished with high-fidelity reads from the same individual, but this may not be technically feasible when sufficient DNA cannot be extracted from individual specimens, for example in small-bodied organisms such as many insects.  In such cases, it is necessary to modify parameters in the standard workflow.  Best practices for de novo, chromosome-scale vertebrate genome assembly from error prone PacBio continuous long reads (CLR) reads were recently described (Rhie et al., 2021) , however it can be challenging to run this code and reproduce widely.   In order to produce the best possible genome assemblies using existing data from species regardless of their position in the tree of life, the genome assembly community needs a publicly available, flexible and reproducible workflow that is containerized so it can be run on any conventional HPC. 

 Bioinformatic pipelines with complex entrance and decision points, such as polishing, are inherently difficult to track, develop, and debug.  Increasing interest in workflow development systems that track data and software provenance, enable scalability and reproducibility, and re-entrant code (Wratten et al., 2021) have led to the development of several workflow languages, largely inspired by GNU Make  (Amstutz et al., 2016;  KÃ¶ster & Rahmann, 2012;  Stallman & McGrath, 1991) .   Nextflow is a Domain Specific Language (Di Tommaso et al., 2017) that currently leads workflow systems in terms of ease of scripting and submitting to cloud computing resources  (Fjukstad & Bongo, 2017;  Jackson et al., 2021;  Leipzig, 2017;  Spjuth et al., 2020) .   A key benefit of Nextflow compared to earlier workflow languages is being able to submit jobs to a local machine, an HPC, or cloud-based compute environments.  These features empower a large range of bioinformatic pipelines, for example, initial read processing and annotation lift-over (Federico et al., 2019;  Talenti & Prendergast, 2021) .   In this paper, we describe polishCLR, a reproducible Nextflow workflow which implements the current best practices for polishing CLR assemblies and is flexible to multiple input assembly and sample considerations. 

 The polishCLR workflow can be easily initiated from three input cases (Fig. 1 ).   In the first case (Case 1), users may start with an unresolved primary assembly with (e.g., the output of FALCON 2-asm (Chin et al., 2016) ) or without (e.g., the output of Canu or wtdbg2  (Koren et al., 2017;  Ruan & Li, 2020 )) associated contigs.   Additionally, it can handle a haplotype-resolved but unpolished set (Case 2) (e.g., the output of FALCON-Unzip 3-unzip (Chin et al., 2016) ).   In the ideal case (Case 3), the pipeline is initiated with a haplotype-resolved, CLR long-read polished set of primary and alternate contigs (e.g., the output of FALCON-Unzip 4-polish).  In all cases, inclusion of organellar genomes, e.g., the mitochondrial genome, will improve the polishing of nuclear mitochondrial or plasmid pseudogenes (Howe et al., 2021) .   Organellar genomes should be generated and polished separately for best results, using pipelines such as the mitochondrial companion to polishCLR, polishCLRmt (Stahlke et al, in prep) or mitoVGP  (Formenti et al., 2021) .   To allow for the inclusion of scaffolding before final polishing (e.g., Durand et al., 2016) and increase the potential for gap-filling across correctly oriented scaffolded contigs, the core workflow is divided into two steps, controlled by a --step parameter flag.  

 In --step 1, if initiating the workflow under Case 1 or 2, unpolished primary contigs are merged with the organellar genome and associated contigs or alternate haplotypes if available, then polished with a single round of Arrow long-read polishing (Pacific BioScience) before entering the core workflow (controlled by --arrow01 true).  During Arrow steps (here and later in 

 Step 2), polishCLR improves re-entry and computational resource use by delineating at least seven Nextflow processes: 1) indexing each contig, 2) creating a pbmm2 index of the assembly, 3) aligning PacBio reads to the assembly, 4) submitting a GCpp Arrow job for each contig in parallel, 5) combining the separate contig variant calling format (VCF) files, 6) reformatting Arrow generated VCF for Merfin filtering (Formenti et al., 2021) , and 7) converting the resultant VCF back to FASTA format.   Then, in all three cases, the core workflow employs purge_dups v. 1.2.5 (Guan et al., 2020) to remove duplicated sequence at the ends of separated primary contigs, with cutoffs automatically estimated from a generated histogram of k-mers.   The histogram is captured as one of the relevant outputs for users to review.  Purged primary sequences are then concatenated to the alternate haplotype contigs and the combined alternate set is purged of duplicates.  BUSCO completeness metrics (Manni et al., 2021;  Seppey et al., 2019;  Simao et al., 2015;  Waterhouse et al., 2018) are generated for the primary contigs before and after removing duplicated content to ensure that cutoff parameters are effective and do not remove too much genic content.   The eukaryotic BUSCO database is used by default, but users may provide a designated lineage (controlled by a --busco-lineage flag).  If additional data are available, this de-duplicated primary contig assembly can then be scaffolded by the user before initiating the second phase of the workflow. 

 In --step 2, the primary, alternate, and organellar assemblies are merged and polished with an additional round of Arrow, followed by two rounds of FreeBayes (Garrison & Marth, 2012) .   Indeed, the iterative nature of polishing benefits from the re-entrant caching and templates of the workflow.  By default, this second round of Arrow-identified variants are only filtered via Merfin if the CLR and the Illumina reads came from the same specimen, adding additional Nextflow processes to the Arrow delineation described above to create a meryl genome database and perform filtering (McCartney et. al, unpublished data) .   However, if shortread data are from a different specimen than the long-read-based contig assembly, then Merfin filtering can be turned off to avoid over-polishing with the parameter flag --same-specimen false. 

 As with Arrow, polishCLR takes advantage of Nextflow in seven processes to implement FreeBayes: 1) creating contig windows, 2) generating a meryl database from the genome, 3) aligning Illumina short reads, 4) polishing via FreeBayes, 5) combining windowed VCF files, 6) filtering VCFs by Merfin, 7) and converting VCFs to FASTA.  Throughout the polishCLR workflow, reports are automatically generated to assess genome assembly quality, including kmer based completeness and consensus accuracy QV scores via Merqury (Rhie et al., 2020) , as well as genome size distribution statistics generated with BBMap (e.g., N50)  (Bushnell, 2014) .   These reports allow users to understand how the assembly changed through each major phase of the workflow.  The complete, detailed pipeline can be viewed in Supplemental Figure 1 .  

 The polishCLR workflow is publicly available (https://github.com/isugifNF/polishCLR),  reproducible, interoperable, easily portable, and can be run on a conventional HPC or extended to cloud computing resources simply by swapping out the Nextflow config file.  Software dependencies are listed in a conda environment file.  Its use has been demonstrated on several arthropod species assemblies as part of the Ag100Pest Initiative (Childers et al., 2021) .  

 Runtimes and summaries from each of the three starting input cases are included (Supplementary Table S1 ;  Stahlke and Coates, 2022) with a full genome announcement forthcoming  (Stahlke et al., unpublished data) .   The polishCLR workflow will increase the efficiency of polishing many genomes and reduce the potential of human error in this multistep process.  Despite the much-reduced error rate of PacBio HiFi and ONT reads, polishing approaches continue to be an important component of accurate genome assembly (Shafin et al., 2021) .   Although this pipeline was not designed to polish with ONT reads, the workflow is available on GitHub and welcomes any future contributions. 



 Figures & Tables  Figure 1 . 1  Diagram of polishCLR workflow for three input cases.  Polishing steps 1 and 2 are run separately to accommodate an optional scaffolding step.  Blue arrows indicate processes while black boxes indicate products.  The dotted arrow indicates that the manual scaffolding step is optional and not within the scope of this pipeline. 



  Case Input stage  Input Genome  Starting  Final QV CPU  Output Genome     of Falcon  Size (Mb) /  QV  hours  Size (Mb) / Number     assembly  Number of      of contigs       contigs       1  2-asm-  501.287 / 789  31.8218  40.3033 211.3 500.578 / 799     falcon/         2  3-unzip/  515.499 / 1125  31.8492  38.9997 224.2 511.878 / 1022   3  4-polish/  509.063 / 882  38.8556  41.9163 195.0 509.052 / 882   Supplemental        

  Table 1 . 1  (Chin et al. 2016)flow was benchmarked on the primary contigs of Helicoverpa zea generated by FALCON(Chin et al. 2016).  Metrics for each assembly include starting pseudo-haploid primary and alternate combined genome size (Mb) and number of contigs, initial quality scores, CPU hours through the pipeline final quality scores, and final genome size and number of contigs.  This table provides an indication of scalability of the pipeline on a SLURM managed HPC. 



     Acknowledgements This work was supported by the U.S. Department of Agriculture, Agricultural Research Service (USDA-ARS) and used resources provided by the SCINet project of the USDA-ARS, ARS 





    Common workflow language  P  Amstutz    M  R  Crusoe    N  TijaniÄ    B  Chapman    J  Chilton    M  Heuer    A  Kartashov    D  Leehr    H  MÃ©nager    M  Nedeljkovich    2016  1    Amstutz, P., Crusoe, M. R., TijaniÄ, N., Chapman, B., Chilton, J., Heuer, M., Kartashov, A., Leehr, D., MÃ©nager, H., & Nedeljkovich, M. (2016). Common workflow language, v1.   BBTools software package  B  Bushnell      2014  579    Bushnell, B. (2014). BBTools software package. URL http://sourceforge. net/projects/bbmap, 578, 579.   The USDA-ARS Ag100Pest Initiative: High-Quality Genome Assemblies for Agricultural Pest Arthropod Research  A  K  Childers    S  M  Geib    S  B  Sim    M  F  Poelchau    B  S  Coates    T  J  Simmonds    E  D  Scully    T  P L  Smith    C  P  Childers    R  L  Corpuz    K  Hackett    B  Scheffler    10.3390/insects12070626     Insects  12  7  2021    Childers, A. K., Geib, S. M., Sim, S. B., Poelchau, M. F., Coates, B. S., Simmonds, T. J., Scully, E. D., Smith, T. P. L., Childers, C. P., Corpuz, R. L., Hackett, K., & Scheffler, B. (2021). The USDA-ARS Ag100Pest Initiative: High-Quality Genome Assemblies for Agricultural Pest Arthropod Research. Insects, 12(7). https://doi.org/10.3390/insects12070626   Phased diploid genome assembly with single-molecule real-time sequencing  C  S  Chin    P  Peluso    F  J  Sedlazeck    M  Nattestad    G  T  Concepcion    A  Clum    C  Dunn    R  O'malley    R  Figueroa-Balderas    A  Morales-Cruz    G  R  Cramer    M  Delledonne    C  Luo    J  R  Ecker    D  Cantu    D  R  Rank    M  C  Schatz    10.1038/nmeth.4035     Nat Methods  13  12    2016    Chin, C. S., Peluso, P., Sedlazeck, F. J., Nattestad, M., Concepcion, G. T., Clum, A., Dunn, C., O'Malley, R., Figueroa-Balderas, R., Morales-Cruz, A., Cramer, G. R., Delledonne, M., Luo, C., Ecker, J. R., Cantu, D., Rank, D. R., & Schatz, M. C. (2016). Phased diploid genome assembly with single-molecule real-time sequencing. Nat Methods, 13(12), 1050-1054. https://doi.org/10.1038/nmeth.4035   Nextflow enables reproducible computational workflows  P  Di Tommaso    M  Chatzou    E  W  Floden    P  P  Barja    E  Palumbo    C  Notredame    10.1038/nbt.3820     Nat Biotechnol  35  4    2017    Di Tommaso, P., Chatzou, M., Floden, E. W., Barja, P. P., Palumbo, E., & Notredame, C. (2017). Nextflow enables reproducible computational workflows. Nat Biotechnol, 35(4), 316-319. https://doi.org/10.1038/nbt.3820   Juicebox Provides a Visualization System for Hi-C Contact Maps with Unlimited Zoom  N  C  Durand    J  T  Robinson    M  S  Shamim    I  Machol    J  P  Mesirov    E  S  Lander    E  L  Aiden    10.1016/j.cels.2015.07.012     Cell Syst  3  1    2016    Durand, N. C., Robinson, J. T., Shamim, M. S., Machol, I., Mesirov, J. P., Lander, E. S., & Aiden, E. L. (2016). Juicebox Provides a Visualization System for Hi-C Contact Maps with Unlimited Zoom. Cell Syst, 3(1), 99-101. https://doi.org/10.1016/j.cels.2015.07.012   Pipeliner: A Nextflow-based framework for the definition of sequencing data processing pipelines  A  Federico    T  Karagiannis    K  Karri    D  Kishore    Y  Koga    J  D  Campbell    S  Monti     Frontiers in genetics  10  614  2019    Federico, A., Karagiannis, T., Karri, K., Kishore, D., Koga, Y., Campbell, J. D., & Monti, S. (2019). Pipeliner: A Nextflow-based framework for the definition of sequencing data processing pipelines. Frontiers in genetics, 10, 614.   A review of scalable bioinformatics pipelines  B  Fjukstad    L  A  Bongo     Data Science and Engineering  2  3    2017    Fjukstad, B., & Bongo, L. A. (2017). A review of scalable bioinformatics pipelines. Data Science and Engineering, 2(3), 245-251.   Vertebrate Genomes Project, C. (2021). Complete vertebrate mitogenomes reveal widespread repeats and gene duplications  G  Formenti    A  Rhie    J  Balacco    B  Haase    J  Mountcastle    O  Fedrigo    S  Brown    M  R  Capodiferro    F  O  Al-Ajli    R  Ambrosini    P  Houde    S  Koren    K  Oliver    M  Smith    J  Skelton    E  Betteridge    J  Dolucan    C  Corton    I  Bista    10.1186/s13059-021-02336-9     Genome Biol  22  1  120    Formenti, G., Rhie, A., Balacco, J., Haase, B., Mountcastle, J., Fedrigo, O., Brown, S., Capodiferro, M. R., Al-Ajli, F. O., Ambrosini, R., Houde, P., Koren, S., Oliver, K., Smith, M., Skelton, J., Betteridge, E., Dolucan, J., Corton, C., Bista, I., . . . Vertebrate Genomes Project, C. (2021). Complete vertebrate mitogenomes reveal widespread repeats and gene duplications. Genome Biol, 22(1), 120. https://doi.org/10.1186/s13059-021-02336- 9   Merfin: improved variant filtering and polishing via k-mer validation  G  Formenti    A  Rhie    B  P  Walenz    F  Thibaud-Nissen    K  Shafin    S  Koren    E  W  Myers    E  D  Jarvis    A  M  Phillippy    10.1101/2021.07.16.452324  2007.2016.452324     bioRxiv  2021. 2021    Formenti, G., Rhie, A., Walenz, B. P., Thibaud-Nissen, F., Shafin, K., Koren, S., Myers, E. W., Jarvis, E. D., & Phillippy, A. M. (2021). Merfin: improved variant filtering and polishing via k-mer validation. bioRxiv, 2021.2007.2016.452324. https://doi.org/10.1101/2021.07.16.452324   Haplotype-based variant detection from short-read sequencing  E  P  Garrison    G  T  Marth    arXiv:   Genomics  2012    Garrison, E. P., & Marth, G. T. (2012). Haplotype-based variant detection from short-read sequencing. arXiv: Genomics.   Identifying and removing haplotypic duplication in primary genome assemblies  D  Guan    S  A  Mccarthy    J  Wood    K  Howe    Y  Wang    R  Durbin    10.1093/bioinformatics/btaa025     Bioinformatics  36  9    2020    Guan, D., McCarthy, S. A., Wood, J., Howe, K., Wang, Y., & Durbin, R. (2020). Identifying and removing haplotypic duplication in primary genome assemblies. Bioinformatics, 36(9), 2896-2898. https://doi.org/10.1093/bioinformatics/btaa025   An improved circular consensus algorithm with an application to detect HIV-1 Drug-Resistance associated mutations (DRAMs)  N  L  Hepler    M  Brown    M  L  Smith    D  Katzenstein    E  E  Paxinos    D  Alexander     Conference on Advances in Genome Biology and Technology  2016    Hepler, N.L., Brown, M., Smith, M.L., Katzenstein, D., Paxinos, E.E. and Alexander, D., 2016. An improved circular consensus algorithm with an application to detect HIV-1 Drug- Resistance associated mutations (DRAMs). In Conference on Advances in Genome Biology and Technology.   Highly accurate long-read HiFi sequencing data for five complex genomes  T  Hon    K  Mars    G  Young    Y  C  Tsai    J  W  Karalius    J  M  Landolin    N  Maurer    D  Kudrna    M  A  Hardigan    C  C  Steiner    S  J  Knapp    D  Ware    B  Shapiro    P  Peluso    D  R  Rank    10.1038/s41597-020-00743-4     Sci Data  7  1  399  2020    Hon, T., Mars, K., Young, G., Tsai, Y. C., Karalius, J. W., Landolin, J. M., Maurer, N., Kudrna, D., Hardigan, M. A., Steiner, C. C., Knapp, S. J., Ware, D., Shapiro, B., Peluso, P., & Rank, D. R. (2020). Highly accurate long-read HiFi sequencing data for five complex genomes. Sci Data, 7(1), 399. https://doi.org/10.1038/s41597-020-00743-4   Long Reads Are Revolutionizing 20 Years of Insect Genome Sequencing  S  Hotaling    J  S  Sproul    J  Heckenhauer    A  Powell    A  M  Larracuente    S  U  Pauls    J  L  Kelley    P  B  Frandsen    10.1093/gbe/evab138     Genome Biol Evol  13  8  2021    Hotaling, S., Sproul, J. S., Heckenhauer, J., Powell, A., Larracuente, A. M., Pauls, S. U., Kelley, J. L., & Frandsen, P. B. (2021). Long Reads Are Revolutionizing 20 Years of Insect Genome Sequencing. Genome Biol Evol, 13(8). https://doi.org/10.1093/gbe/evab138   Significantly improving the quality of genome assemblies through curation  K  Howe    W  Chow    J  Collins    S  Pelan    D.-L  Pointon    Y  Sims    J  Torrance    A  Tracey    J  Wood    10.1093/gigascience/giaa153     GigaScience  10  1  2021    Howe, K., Chow, W., Collins, J., Pelan, S., Pointon, D.-L., Sims, Y., Torrance, J., Tracey, A., & Wood, J. (2021). Significantly improving the quality of genome assemblies through curation. GigaScience, 10(1). https://doi.org/10.1093/gigascience/giaa153   Using prototyping to choose a bioinformatics workflow management system  M  Jackson    K  Kavoussanakis    E  W J  Wallace    10.1371/journal.pcbi.1008622     PLoS Comput Biol  17  2  1008622  2021    Jackson, M., Kavoussanakis, K., & Wallace, E. W. J. (2021). Using prototyping to choose a bioinformatics workflow management system. PLoS Comput Biol, 17(2), e1008622. https://doi.org/10.1371/journal.pcbi.1008622   Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation  S  Koren    B  P  Walenz    K  Berlin    J  R  Miller    N  H  Bergman    A  M  Phillippy    10.1101/gr.215087.116     Genome Res  27  5    2017    Koren, S., Walenz, B. P., Berlin, K., Miller, J. R., Bergman, N. H., & Phillippy, A. M. (2017). Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation. Genome Res, 27(5), 722-736. https://doi.org/10.1101/gr.215087.116   Snakemake-a scalable bioinformatics workflow engine  J  KÃ¶ster    S  Rahmann     Bioinformatics  28  19    2012    KÃ¶ster, J., & Rahmann, S. (2012). Snakemake-a scalable bioinformatics workflow engine. Bioinformatics, 28(19), 2520-2522.   A review of bioinformatic pipeline frameworks  J  Leipzig    10.1093/bib/bbw020     Brief Bioinform  18  3    2017    Leipzig, J. (2017). A review of bioinformatic pipeline frameworks. Brief Bioinform, 18(3), 530- 536. https://doi.org/10.1093/bib/bbw020   BUSCO Update: Novel and Streamlined Workflows along with Broader and Deeper Phylogenetic Coverage for Scoring of Eukaryotic, Prokaryotic, and Viral Genomes  M  Manni    M  R  Berkeley    M  Seppey    F  A  Simao    E  M  Zdobnov    10.1093/molbev/msab199     Mol Biol Evol  38  10    2021    Manni, M., Berkeley, M. R., Seppey, M., Simao, F. A., & Zdobnov, E. M. (2021). BUSCO Update: Novel and Streamlined Workflows along with Broader and Deeper Phylogenetic Coverage for Scoring of Eukaryotic, Prokaryotic, and Viral Genomes. Mol Biol Evol, 38(10), 4647-4654. https://doi.org/10.1093/molbev/msab199   Chasing perfection: validation and polishing strategies for telomere-totelomere genome assemblies  A  M  Mccartney    K  Shafin    M  Alonge    A  V  Bzikadze    G  Formenti    A  Fungtammasan    .  .  Rhie    A    10.1101/2021.07.02.450803    February 2, 2022    McCartney, A. M., Shafin, K., Alonge, M., Bzikadze, A. V., Formenti, G., Fungtammasan, A., ... & Rhie, A. Chasing perfection: validation and polishing strategies for telomere-to- telomere genome assemblies. unpublished data https://doi.org/10.1101/2021.07.02.450803, last accessed February 2, 2022   Towards complete and error-free genome assemblies of all vertebrate species  A  Rhie    S  A  Mccarthy    O  Fedrigo    J  Damas    G  Formenti    S  Koren    M  Uliano-Silva    W  Chow    A  Fungtammasan    J  Kim    C  Lee    B  J  Ko    M  Chaisson    G  L  Gedman    L  J  Cantin    F  Thibaud-Nissen    L  Haggerty    I  Bista    M  Smith    .  .  Jarvis    E  D    10.1038/s41586-021-03451-0     Nature  592  7856    2021    Rhie, A., McCarthy, S. A., Fedrigo, O., Damas, J., Formenti, G., Koren, S., Uliano-Silva, M., Chow, W., Fungtammasan, A., Kim, J., Lee, C., Ko, B. J., Chaisson, M., Gedman, G. L., Cantin, L. J., Thibaud-Nissen, F., Haggerty, L., Bista, I., Smith, M., . . . Jarvis, E. D. (2021). Towards complete and error-free genome assemblies of all vertebrate species. Nature, 592(7856), 737-746. https://doi.org/10.1038/s41586-021-03451-0   Merqury: reference-free quality, completeness, and phasing assessment for genome assemblies  A  Rhie    B  P  Walenz    S  Koren    A  M  Phillippy    10.1186/s13059-020-02134-9     Genome Biol  21  1  245  2020    Rhie, A., Walenz, B. P., Koren, S., & Phillippy, A. M. (2020). Merqury: reference-free quality, completeness, and phasing assessment for genome assemblies. Genome Biol, 21(1), 245. https://doi.org/10.1186/s13059-020-02134-9.   Fast and accurate long-read assembly with wtdbg2  J  Ruan    H  Li    10.1038/s41592-019-0669-3     Nat Methods  17  2    2020    Ruan, J., & Li, H. (2020). Fast and accurate long-read assembly with wtdbg2. Nat Methods, 17(2), 155-158. https://doi.org/10.1038/s41592-019-0669-3   BUSCO: Assessing Genome Assembly and Annotation Completeness  M  Seppey    M  Manni    E  M  Zdobnov    10.1007/978-1-4939-9173-0_14     Methods Mol Biol    2019. 1962    Seppey, M., Manni, M., & Zdobnov, E. M. (2019). BUSCO: Assessing Genome Assembly and Annotation Completeness. Methods Mol Biol, 1962, 227-245. https://doi.org/10.1007/978-1-4939-9173-0_14   Haplotype-aware variant calling with PEPPER-Margin-DeepVariant enables high accuracy in nanopore long-reads  K  Shafin    T  Pesout    P  C  Chang    M  Nattestad    A  Kolesnikov    S  Goel    G  Baid    M  Kolmogorov    J  M  Eizenga    K  H  Miga    P  Carnevali    M  Jain    A  Carroll    B  Paten    10.1038/s41592-021-01299-w     Nat Methods  18  11    2021    Shafin, K., Pesout, T., Chang, P. C., Nattestad, M., Kolesnikov, A., Goel, S., Baid, G., Kolmogorov, M., Eizenga, J. M., Miga, K. H., Carnevali, P., Jain, M., Carroll, A., & Paten, B. (2021). Haplotype-aware variant calling with PEPPER-Margin-DeepVariant enables high accuracy in nanopore long-reads. Nat Methods, 18(11), 1322-1332. https://doi.org/10.1038/s41592-021-01299-w   BUSCO: assessing genome assembly and annotation completeness with single-copy orthologs  F  A  Simao    R  M  Waterhouse    P  Ioannidis    E  V  Kriventseva    E  M  Zdobnov    10.1093/bioinformatics/btv351     Bioinformatics  31  19    2015    Simao, F. A., Waterhouse, R. M., Ioannidis, P., Kriventseva, E. V., & Zdobnov, E. M. (2015). BUSCO: assessing genome assembly and annotation completeness with single-copy orthologs. Bioinformatics, 31(19), 3210-3212. https://doi.org/10.1093/bioinformatics/btv351   Approaches for containerized scientific workflows in cloud environments with applications in life science  O  Spjuth    M  Capuccini    M  Carone    A  Larsson    W  Schaal    J  A  Novella    O  Stein    M  Ekmefjord    P  Di Tommaso    E  Floden    2020    Preprints  Spjuth, O., Capuccini, M., Carone, M., Larsson, A., Schaal, W., Novella, J. A., Stein, O., Ekmefjord, M., Di Tommaso, P., & Floden, E. (2020). Approaches for containerized scientific workflows in cloud environments with applications in life science. Preprints.   Data from polishCLR: Example input genome assemblies  A  R  Stahlke    B  S  Coates    10.15482/USDA.ADC/1524676     Ag Data Commons  2022. 2022-02-09    Stahlke, A.R.; Coates, B.S.. (2022). Data from polishCLR: Example input genome assemblies. Ag Data Commons. https://doi.org/10.15482/USDA.ADC/1524676. Accessed 2022-02- 09.   GNU Make-A Program for Directing Recompilation  R  M  Stallman    R  Mcgrath    1991    Stallman, R. M., & McGrath, R. (1991). GNU Make-A Program for Directing Recompilation.   nf-LO: A Scalable, Containerized Workflow for Genome-to-Genome Lift Over  A  Talenti    J  Prendergast    10.1093/gbe/evab183     Genome Biology and Evolution  13  9  2021    Talenti, A., & Prendergast, J. (2021). nf-LO: A Scalable, Containerized Workflow for Genome-to- Genome Lift Over. Genome Biology and Evolution, 13(9). https://doi.org/10.1093/gbe/evab183   Pilon: an integrated tool for comprehensive microbial variant detection and genome assembly improvement  B  J  Walker    T  Abeel    T  Shea    M  Priest    A  Abouelliel    S  Sakthikumar    C  A  Cuomo    Q  Zeng    J  Wortman    S  K  Young    A  M  Earl    10.1371/journal.pone.0112963     PLoS One  9  11  112963  2014    Walker, B. J., Abeel, T., Shea, T., Priest, M., Abouelliel, A., Sakthikumar, S., Cuomo, C. A., Zeng, Q., Wortman, J., Young, S. K., & Earl, A. M. (2014). Pilon: an integrated tool for comprehensive microbial variant detection and genome assembly improvement. PLoS One, 9(11), e112963. https://doi.org/10.1371/journal.pone.0112963   Nanopore sequencing technology, bioinformatics and applications  Y  Wang    Y  Zhao    A  Bollas    Y  Wang    K  F  Au    10.1038/s41587-021-01108-x     Nat Biotechnol  39  11    2021    Wang, Y., Zhao, Y., Bollas, A., Wang, Y., & Au, K. F. (2021). Nanopore sequencing technology, bioinformatics and applications. Nat Biotechnol, 39(11), 1348-1365. https://doi.org/10.1038/s41587-021-01108-x   BUSCO Applications from Quality Assessments to Gene Prediction and Phylogenomics  R  M  Waterhouse    M  Seppey    F  A  Simao    M  Manni    P  Ioannidis    G  Klioutchnikov    E  V  Kriventseva    E  M  Zdobnov    10.1093/molbev/msx319     Mol Biol Evol  35  3    2018    Waterhouse, R. M., Seppey, M., Simao, F. A., Manni, M., Ioannidis, P., Klioutchnikov, G., Kriventseva, E. V., & Zdobnov, E. M. (2018). BUSCO Applications from Quality Assessments to Gene Prediction and Phylogenomics. Mol Biol Evol, 35(3), 543-548. https://doi.org/10.1093/molbev/msx319   Errors in long-read assemblies can critically affect protein prediction  M  Watson    A  Warr    10.1038/s41587-018-0004-z     Nat Biotechnol  37  2    2019    Watson, M., & Warr, A. (2019). Errors in long-read assemblies can critically affect protein prediction. Nat Biotechnol, 37(2), 124-126. https://doi.org/10.1038/s41587-018-0004-z   Reproducible, scalable, and shareable analysis pipelines with bioinformatics workflow managers  L  Wratten    A  Wilm    J  Goke    10.1038/s41592-021-01254-9     Nat Methods  18  10    2021    Wratten, L., Wilm, A., & Goke, J. (2021). Reproducible, scalable, and shareable analysis pipelines with bioinformatics workflow managers. Nat Methods, 18(10), 1161-1168. https://doi.org/10.1038/s41592-021-01254-9   

     